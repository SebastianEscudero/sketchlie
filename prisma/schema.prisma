// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  organizations OrganizationUser[]
  invitations   OrganizationInvitation[]
}

model Organization {
  id String @id @default(cuid())
  name String
  users OrganizationUser[]
  invitations OrganizationInvitation[]
}

model OrganizationUser {
  userId String
  user User @relation(fields: [userId], references: [id])
  organizationId String
  organization Organization @relation(fields: [organizationId], references: [id])

  @@id([userId, organizationId])
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id String @id @default(cuid())
  email String
  token String @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id String @id @default(cuid())
  email String
  token String @unique
  expires DateTime

  @@unique([email, token])
}

model OrganizationInvitation {
  id             String    @id @default(cuid())
  email          String
  organizationId String
  status         InvitationStatus @default(PENDING)
  createdAt      DateTime  @default(now())
  organization   Organization @relation(fields: [organizationId], references: [id])
  user           User? @relation(fields: [email], references: [email])

  @@unique([email, organizationId])
}
enum InvitationStatus {
  PENDING
  ACCEPTED
  DECLINED
}